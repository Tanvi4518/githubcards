{"version":3,"sources":["components/Form.js","components/Card.js","components/CardList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","state","userName","handleSubmit","event","a","preventDefault","axios","get","resp","props","onSubmit","data","setState","this","type","value","onChange","target","placeholder","required","React","Card","profile","className","src","avatar_url","name","company","CardList","profiles","map","id","App","addNewProfile","profileData","prevState","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSA2BeA,E,4MAvBXC,MAAQ,CAAEC,SAAU,I,EACpBC,a,uCAAe,WAAOC,GAAP,eAAAC,EAAA,6DACXD,EAAME,iBADK,SAEQC,IAAMC,IAAN,uCAA0C,EAAKP,MAAMC,WAF7D,OAELO,EAFK,OAGX,EAAKC,MAAMC,SAASF,EAAKG,MACzB,EAAKC,SAAS,CAAEX,SAAU,KAJf,2C,kGAMf,WAAU,IAAD,OACL,OACI,uBAAMS,SAAUG,KAAKX,aAArB,UACI,uBACIY,KAAK,OACLC,MAAOF,KAAKb,MAAMC,SAClBe,SAAU,SAAAb,GAAK,OAAI,EAAKS,SAAS,CAAEX,SAAUE,EAAMc,OAAOF,SAC1DG,YAAY,kBACZC,UAAQ,IAEZ,qD,GAlBGC,a,QCcJC,E,4JAdX,WACI,IAAMC,EAAUT,KAAKJ,MACrB,OACI,sBAAKc,UAAU,iBAAf,UACI,qBAAKC,IAAKF,EAAQG,aAClB,sBAAKF,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBD,EAAQI,OAC/B,qBAAKH,UAAU,UAAf,SAA0BD,EAAQK,oB,GARnCP,aCMJQ,EANE,SAACnB,GAAD,OACb,8BACKA,EAAMoB,SAASC,KAAI,SAAAR,GAAO,OAAI,cAAC,EAAD,eAA2BA,GAAhBA,EAAQS,UCoB3CC,E,4MAlBXhC,MAAQ,CACJ6B,SAAU,I,EAEdI,cAAgB,SAACC,GACb,EAAKtB,UAAS,SAAAuB,GAAS,MAAK,CACxBN,SAAS,GAAD,mBAAMM,EAAUN,UAAhB,CAA0BK,S,4CAG1C,WACI,OACI,gCACI,qBAAKX,UAAU,SAAf,SAAyBV,KAAKJ,MAAM2B,QACpC,cAAC,EAAD,CAAM1B,SAAUG,KAAKoB,gBACrB,cAAC,EAAD,CAAUJ,SAAUhB,KAAKb,MAAM6B,kB,GAd7BT,aCOHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4fd7ffdd.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass Form extends React.Component {\r\n    state = { userName: '' };\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const resp = await axios.get(`https://api.github.com/users/${this.state.userName}`);\r\n        this.props.onSubmit(resp.data);\r\n        this.setState({ userName: '' });\r\n    };\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.userName}\r\n                    onChange={event => this.setState({ userName: event.target.value })}\r\n                    placeholder=\"GitHub username\"\r\n                    required\r\n                />\r\n                <button>Add card</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import * as React from \"react\";\r\n\r\nclass Card extends React.Component {\r\n    render() {\r\n        const profile = this.props;\r\n        return (\r\n            <div className=\"github-profile\">\r\n                <img src={profile.avatar_url} />\r\n                <div className=\"info\">\r\n                    <div className=\"name\">{profile.name}</div>\r\n                    <div className=\"company\">{profile.company}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nconst CardList = (props) => (\r\n    <div>\r\n        {props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}\r\n    </div>\r\n);\r\n\r\nexport default CardList;\r\n","import './../App.css';\r\nimport * as React from \"react\";\r\nimport Form from \"./Form\";\r\nimport CardList from \"./CardList\";\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        profiles: [],\r\n    };\r\n    addNewProfile = (profileData) => {\r\n        this.setState(prevState => ({\r\n            profiles: [...prevState.profiles, profileData],\r\n        }));\r\n    };\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">{this.props.title}</div>\r\n                <Form onSubmit={this.addNewProfile} />\r\n                <CardList profiles={this.state.profiles} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}